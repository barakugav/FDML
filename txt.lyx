#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algorithmic Robotics And Motion Planning Project
\end_layout

\begin_layout Standard
Barak Ugav 318336229
\end_layout

\begin_layout Subsubsection*
The Question
\end_layout

\begin_layout Standard
We are given a point robot 
\begin_inset Formula $P$
\end_inset

 which is known to be in the interior of some polygonal room 
\begin_inset Formula $Q$
\end_inset

 with 
\begin_inset Formula $n$
\end_inset

 vertices.
 The robot is equipped with a depth sensor which evaluates the distance
 to the visible obstacle in the pointed direction.
 Describe a data structure that can be constructed during preprocessing
 of the room and can be used to efficiently calculate all the points the
 robot might think he is after a single depth measurement from an unknown
 position and rotation.
\end_layout

\begin_layout Subsubsection*
Motivation
\end_layout

\begin_layout Standard
Such scenario can be applicable in real world cases, for example: a rover
 lands on Mars, a map of whose terrain is available to it.
 It looks about its position, and then infers its exact position on the
 Martian surface.
 Another application comes from robots that follow a planned path through
 a scene: the control systems that guide such a robot along the planned
 path gradually accumulate errors due to mechanical drift.
 Thus it is desirable to use localization from time to time to verify the
 actual position of the robot in the map, and apply corrections as necessary
 to return it to the planned path.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
Solution
\end_layout

\begin_layout Standard
To answer a query of the described type, we will perform preprocessing of
 the room, and calculate for each edge the 
\begin_inset Quotes eld
\end_inset

visible
\begin_inset Quotes erd
\end_inset

 region from it, and when given a query of measurement 
\begin_inset Formula $d$
\end_inset

 we will search all the edges that have a region at distance 
\begin_inset Formula $d$
\end_inset

 from it.
 For each edge 
\begin_inset Formula $e$
\end_inset

, we will set it's 2D coordination system with its origin at the first vertex
 of the edge when traversing on the room's borders clockwise, the 
\begin_inset Formula $x$
\end_inset

 axis along the edge and the 
\begin_inset Formula $y$
\end_inset

 axis perpendicular to the edge.
 For a fixed angle 
\begin_inset Formula $\theta$
\end_inset

, we would like to calculate the distance to the nearest obstacle visible
 from the edge in angle 
\begin_inset Formula $\theta$
\end_inset

 as a function of the distance 
\begin_inset Formula $x$
\end_inset

 from the edge origin.
\end_layout

\begin_layout Standard
Given a fixed angle 
\begin_inset Formula $\theta$
\end_inset

, fixed point 
\begin_inset Formula $x_{0}$
\end_inset

 along an edge 
\begin_inset Formula $e$
\end_inset

, the line that goes through 
\begin_inset Formula $(x_{0},0)$
\end_inset

 with angle 
\begin_inset Formula $\theta$
\end_inset

 is 
\begin_inset Formula $y=tan\theta(x-x_{0})$
\end_inset

.
 Given an edge 
\begin_inset Formula $e'$
\end_inset

 with equation 
\begin_inset Formula $y=mx+b$
\end_inset

 relative to 
\begin_inset Formula $e$
\end_inset

 origins, the two lines intersection point is 
\begin_inset Formula $\left(\frac{tan\theta x_{0}+b}{tan\theta-m},\frac{tan\theta(mx_{0}+b)}{tan\theta-m}\right)$
\end_inset

, and the distance to the intersection can be calculated as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sqrt{\left(\frac{tan\theta(mx_{0}+b)}{tan\theta-m}\right)^{2}+\left(\frac{tan\theta x_{0}+b}{tan\theta-m}-x_{0}\right)^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sqrt{\frac{tan^{2}\theta(mx_{0}+b)^{2}+(mx_{0}+b)^{2}}{\left(tan\theta-m\right)^{2}}}=\sqrt{\frac{(mx_{0}+b)^{2}(tan^{2}\theta+1)}{\left(tan\theta-m\right)^{2}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sqrt{\frac{(mx_{0}+b)^{2}sec^{2}\theta}{\left(tan\theta-m\right)^{2}}}=\frac{(mx_{0}+b)sec\theta}{tan\theta-m}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename figure4.png
	scale 40

\end_inset


\end_layout

\begin_layout Standard
So we can write the visible distance of 
\begin_inset Formula $e'$
\end_inset

 from 
\begin_inset Formula $e$
\end_inset

 as a function of 
\begin_inset Formula $\theta,x_{0}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f_{e,e'}(\theta,x)=\frac{(mx+b)sec\theta}{tan\theta-m}
\]

\end_inset


\end_layout

\begin_layout Standard
This is of course only defined if the intersection point is in 
\begin_inset Formula $e'$
\end_inset

 range and it's in the correct half plane of 
\begin_inset Formula $e$
\end_inset

.
 Note that 
\begin_inset Formula $f_{e,e'}(\theta,x)$
\end_inset

 is a straight line if 
\begin_inset Formula $\theta$
\end_inset

 is a fixed angle.
\end_layout

\begin_layout Standard
Denote 
\begin_inset Formula $f_{e}(\theta,x)=\underset{e'}{min}\,f_{e,e'}(\theta,x)$
\end_inset

.
 For non fixed 
\begin_inset Formula $\theta$
\end_inset

, the function 
\begin_inset Formula $f_{e}(\theta,x)$
\end_inset

 represent the maximum visible distance seen at 
\begin_inset Formula $x$
\end_inset

 on 
\begin_inset Formula $e$
\end_inset

 at angle 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Subsection*
Discrete Angles Approach
\end_layout

\begin_layout Standard
For our preprocessing, we will discretise the angle 
\begin_inset Formula $\theta$
\end_inset

, by dividing it to 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $k$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 (for example 
\begin_inset Formula $1000$
\end_inset

) small angles.
 For each fixed angle 
\begin_inset Formula $\theta$
\end_inset

, will calculate for each edge 
\begin_inset Formula $e$
\end_inset

, and each other edge 
\begin_inset Formula $e'$
\end_inset

 the function 
\begin_inset Formula $f_{e,e'}$
\end_inset

 described above.
 Then, for each edge 
\begin_inset Formula $e$
\end_inset

 we will calculate 
\begin_inset Formula $f_{e}(\theta,x)$
\end_inset

.
 For a fixed angle and edge, the visible edges can be changed at most 
\begin_inset Formula $O(n)$
\end_inset

 times, because it can be change only when a vertex is seen, and no more
 than 
\begin_inset Formula $n$
\end_inset

 vertices can be seen, so 
\begin_inset Formula $f_{e}(\theta,x)$
\end_inset

 is composed from 
\begin_inset Formula $O(n)$
\end_inset

 intervals of 
\begin_inset Formula $f_{e,e'}$
\end_inset

 (of some 
\begin_inset Formula $e'$
\end_inset

).
 The preprocessing requires 
\begin_inset Formula $O(kn^{2})$
\end_inset

 time and space.
\end_layout

\begin_layout Standard
Given a query with distance 
\begin_inset Formula $d$
\end_inset

, we check for each edge 
\begin_inset Formula $e$
\end_inset

, and each discetizided angle 
\begin_inset Formula $\theta$
\end_inset

, all the intervals at which 
\begin_inset Formula $f_{e}$
\end_inset

 is greater than 
\begin_inset Formula $d$
\end_inset

, which we can calculate in 
\begin_inset Formula $O(n)$
\end_inset

 time.
 The result for the query is union of all the intervals of all angles and
 all edges.
 Time complexity for a query 
\begin_inset Formula $O(kn^{2})$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Output Sensitive Optimization
\end_layout

\begin_layout Standard
The function 
\begin_inset Formula $f_{e}(\theta,x)$
\end_inset

 is composed of at most 
\begin_inset Formula $O(n)$
\end_inset

 straight lines, denote the 
\begin_inset Formula $x$
\end_inset

 intervals of these lines by 
\begin_inset Formula $I_{i}^{e}$
\end_inset

.
 Denote 
\begin_inset Formula $m_{\theta}(I_{i}^{e})=\underset{x\in I_{i}^{e}}{max}\,f_{e}(\theta,x)$
\end_inset

.
 For a fixed edge 
\begin_inset Formula $e$
\end_inset

, we know if 
\begin_inset Formula $d>m_{\theta}(I_{i}^{e})$
\end_inset

, there is no points in the room that the robot can be in to measure 
\begin_inset Formula $d$
\end_inset

 at 
\begin_inset Formula $e$
\end_inset

 at the 
\begin_inset Formula $x$
\end_inset

 interval 
\begin_inset Formula $I_{i}^{e}$
\end_inset

.
 We can use this to get a more sensitive output algorithm.
 After the above preprocessing, for each fixed angle 
\begin_inset Formula $\theta$
\end_inset

 and a fixed edge 
\begin_inset Formula $e$
\end_inset

 we calculate for each interval the value 
\begin_inset Formula $m_{\theta}(I_{i}^{e})$
\end_inset

.
 For each angle 
\begin_inset Formula $\theta$
\end_inset

 we take all intervals of all edges and sort them by 
\begin_inset Formula $m_{\theta}(I_{i}^{e})$
\end_inset

.
 Denote 
\begin_inset Formula $m_{\theta}=\underset{e,i}{max}\,m_{\theta}(I_{i}^{e})$
\end_inset

, and sort the angles by 
\begin_inset Formula $m_{\theta}$
\end_inset

.
 The preprocessing requires 
\begin_inset Formula $O(kn^{2}logn+klogk)$
\end_inset

 time and 
\begin_inset Formula $O(kn^{2})$
\end_inset

 space.
\end_layout

\begin_layout Standard
Given a query with distance 
\begin_inset Formula $d$
\end_inset

, we only look at the angles and intervals at which we know there will be
 a valid answer.
 Denote by 
\begin_inset Formula $L$
\end_inset

 the number of different intervals of positions the robot can be relative
 to any edge in any of the discrete angles.
 The time complexity of the query is 
\begin_inset Formula $O(logk+logn+L)$
\end_inset

.
 In the worst case 
\begin_inset Formula $L$
\end_inset

 can be 
\begin_inset Formula $O(kn^{2})$
\end_inset

.
\end_layout

\begin_layout Subsection*
Continuous Angles Approach
\end_layout

\begin_layout Standard
TODO
\end_layout

\end_body
\end_document
